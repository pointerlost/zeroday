#version 460
layout(local_size_x = 64) in;

// Entity Metadata
layout(std430, binding = 0) buffer EntityMetadata {
    uint entityVAO[];
    uint entityMaterialIndex[];
    uint entityTransformIndex[];
    uint entityIndexCount[];
    uint entityIndexOffset[];
};

// Indirect Commands Output
layout(std430, binding = 1) buffer IndirectCommands {
    DrawElementsIndirectCommand commands[];
};

// Batch Counters
layout(std430, binding = 2) buffer BatchCounters {
    atomic_uint batchCounts[1024];  // MAX_BATCHES = 1024
};

// Visible Entities (frustum culling)
layout(std430, binding = 3) buffer VisibleEntities {
    uint visibleEntityIndices[];
    uint visibleEntityCount;
};

void main() {
    uint threadIndex = gl_GlobalInvocationID.x;
    if (threadIndex >= visibleEntityCount) return;

    uint entityIndex = visibleEntityIndices[threadIndex];

    // Batch key: VAO and Material combinations
    uint batchKey = entityVAO[entityIndex] * 256 + entityMaterialIndex[entityIndex];

    // Get command index with atomic counter
    uint commandIndex = atomicCounterIncrement(batchCounts[batchKey]);

    // Create Indirect command
    uint outputIndex = batchKey * 1024 + commandIndex;  // Max 1024 entities per batch

    commands[outputIndex].count         = entityIndexCount[entityIndex];
    commands[outputIndex].instanceCount = 1;
    commands[outputIndex].firstIndex    = entityIndexOffset[entityIndex];
    commands[outputIndex].baseVertex    = 0;
    commands[outputIndex].baseInstance  = entityTransformIndex[entityIndex];
}
#version 460
layout(local_size_x = 64) in;

struct TransformSSBO {
    mat4 modelMatrix;
    mat4 normalMatrix;
};

// Input: Precomputed transform data
layout(std430, binding = BINDING_PHASE_INPUT) buffer CPUTransformBuffer {
    TransformSSBO cpuTransforms[];
};

// Output: GPU transform data
layout(std430, binding = BINDING_PHASE_OUTPUT) buffer GPUTransformBuffer {
    TransformSSBO gpuTransforms[];
};

void main() {
    uint entityId = gl_GlobalInvocationID.x;
    if (entityId >= MAX_ENTITIES) return;

    // Simple copy - both matrices already computed on CPU
    gpuTransforms[entityId] = cpuTransforms[entityId];
}
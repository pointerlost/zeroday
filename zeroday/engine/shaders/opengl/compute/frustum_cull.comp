#version 460
layout(local_size_x = 64) in;

layout(std430, binding = 0) buffer EntityTransforms {
    mat4 transforms[];
};
layout(std430, binding = 1) buffer EntityBounds {
    vec4 bounds[]; // center.x, center.y, center.z, radius
};
layout(std430, binding = 2) buffer VisibleEntities {
    uint visibleIndices[];
    atomic_uint visibleCount;
};
layout(std430, binding = 3) uniform CameraData {
    mat4 viewProjection;
    vec4 frustumPlanes[6];
};

bool SphereInFrustum(vec3 center, float radius, vec4 planes[6]) {
    for (int i = 0; i < 6; i++) {
        float distance = dot(planes[i], vec4(center, 1.0));
        if (distance < -radius) return false;
    }
    return true;
}

void main() {
    uint entityIdx = gl_GlobalInvocationID.x;
    vec3 center = bounds[entityIdx].xyz;
    float radius = bounds[entityIdx].w;

    if (SphereInFrustum(center, radius, frustumPlanes)) {
        uint visibleIdx = atomicCounterIncrement(visibleCount);
        visibleIndices[visibleIdx] = entityIdx;
    }
}
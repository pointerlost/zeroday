#version 460
layout(local_size_x = 64) in;

// Dirty entities list
layout(std430, binding = 0) buffer DirtyList {
    uint dirtyIndices[];
    uint dirtyCount;
};

// Component data
layout(std430, binding = 1) buffer TransformData {
    mat4 transformMatrices[];
    mat3 normalMatrices[];
};

// Entity-to-component mapping
layout(std430, binding = 2) buffer EntityToTransform {
    uint entityToTransformMap[];
};

// World data (coming from CPU)
layout(std430, binding = 3) buffer WorldData {
    mat4 worldTransforms[];
};

void main() {
    uint threadIndex = gl_GlobalInvocationID.x;
    if (threadIndex >= dirtyCount) return;

    uint entityIndex = dirtyIndices[threadIndex];
    uint transformIndex = entityToTransformMap[entityIndex];

    // Transform update
    mat4 worldTransform = worldTransforms[entityIndex];
    transformMatrices[transformIndex] = worldTransform;

    // Normal matrix calculation
    mat3 normalMatrix = mat3(transpose(inverse(worldTransform)));
    normalMatrices[transformIndex] = normalMatrix;
}